using System;
using System.Data;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;

namespace Modelbuilder
{
    /// <summary>
    /// Interaction logic for metadataCountry.xaml
    /// </summary>
    public partial class metadataCategory : Page
    {
        private readonly string DatabaseTable = "categories";
        public metadataCategory()
        {
            InitializeComponent();
        }
        private void CommonCommandBinding_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            e.CanExecute = true;
        }
        public void BuildTree()
        {
            Database dbConnection = new Database
            {
                TableName = DatabaseTable
            };

            _ = new DataTable();

            dbConnection.SqlSelectionString = "*";
            dbConnection.SqlOrderByString = "category_ParentId";
            dbConnection.TableName = DatabaseTable;

            DataTable dtCategoryCodes = dbConnection.LoadSpecificMySqlData();
            //Use a DataSet to manage the data
            DataSet dsCategoryCodes = new DataSet();
            dsCategoryCodes.Tables.Add(dtCategoryCodes);

            // add a relationship
            dsCategoryCodes.Relations.Add("rsParentChild", dsCategoryCodes.Tables[DatabaseTable].Columns["category_Id"],
                dsCategoryCodes.Tables[DatabaseTable].Columns["category_ParentId"]);

            foreach (DataRow row in dsCategoryCodes.Tables[DatabaseTable].Rows)
            {
                if (row["category_ParentId"] == DBNull.Value)
                {
                    TreeViewItem root = new TreeViewItem
                    {
                        Header = row["category_Name"].ToString(),
                        Name = "P" + row["category_Id"].ToString(),
                        Tag = "P" + row["category_Id"].ToString()
                    };
                    treeViewCategory.Items.Add(root);
                    PopulateTree(row, root);
                }
            }

        }
        public void PopulateTree(DataRow datarow, TreeViewItem parentNode)
        {
            foreach (DataRow row in datarow.GetChildRows("rsParentChild"))
            {
                TreeViewItem cChild = new TreeViewItem
                {
                    Header = row["category_Name"].ToString(),
                    Name = "P" + row["category_ParentId"].ToString() + "C" + row["category_Id"].ToString(), // Store ID and Parent_Id in the tag
                    Tag = "P" + row["category_ParentId"].ToString() + "C" + row["category_Id"].ToString()
                };
                parentNode.Items.Add(cChild);
                //Recursively build the tree
                PopulateTree(row, cChild);
            }
        }

    }
}
