<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="metadataCategory.Page.Title" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="metadataCountry.Page.Title" xml:space="preserve">
    <value>Countries</value>
  </data>
  <data name="metadataCurrency.Page.Title" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="metadataProduct.Page.Title" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="metadataProject.Page.Title" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="metadataProject.TabItemHeader.General" xml:space="preserve">
    <value>Project data</value>
  </data>
  <data name="metadataProject.TabItemHeader.Memo" xml:space="preserve">
    <value>Additional information</value>
  </data>
  <data name="metadataProject.TabItemHeader.ProjectCosts" xml:space="preserve">
    <value>Project Expenses</value>
  </data>
  <data name="metadataProject.TabItemHeader.TimeManagement" xml:space="preserve">
    <value>Building time</value>
  </data>
  <data name="metadataStorage.Page.Title" xml:space="preserve">
    <value>Storage Locations</value>
  </data>
  <data name="metadataSupplier.Page.Title" xml:space="preserve">
    <value>Suppliers</value>
  </data>
  <data name="metadataWorktype.Page.Title" xml:space="preserve">
    <value>Work types</value>
  </data>
  <data name="Order.Page.Title" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="Order.Page.SubTitle" xml:space="preserve">
    <value>Enter the order per supplier, per line you can indicate whether an item is included in the project costs</value>
  </data>
  <data name="Order.TabItemHeader.Memo" xml:space="preserve">
    <value>Additional information</value>
  </data>
  <data name="Order.TabItemHeader.General" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="toolbarButton.Text.Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="toolbarButton.Text.Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="toolbarButton.Text.Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="toolbarButton.Font.Bold" xml:space="preserve">
    <value>Bold</value>
  </data>
  <data name="toolbarButton.Font.Italic" xml:space="preserve">
    <value>Italic</value>
  </data>
  <data name="toolbarButton.Text.Redo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="toolbarButton.Font.Underline" xml:space="preserve">
    <value>Underline</value>
  </data>
  <data name="toolbarButton.Text.Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="toolbarButton.List.Bullet" xml:space="preserve">
    <value>Bullet list</value>
  </data>
  <data name="toolbarButton.List.Number" xml:space="preserve">
    <value>Numbered list</value>
  </data>
  <data name="toolbarButton.Indent.Increase" xml:space="preserve">
    <value>Increase indention</value>
  </data>
  <data name="toolbarButton.Indent.Decrease" xml:space="preserve">
    <value>Decrease indention</value>
  </data>
  <data name="Order.Order.Field.Closed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="Order.Order.Field.ClosedDate" xml:space="preserve">
    <value>Deliverydate</value>
  </data>
  <data name="Order.Order.Field.CurrencyRate" xml:space="preserve">
    <value>Conversion rate</value>
  </data>
  <data name="Order.Order.Field.CurrencySymbol" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Order.Order.Field.OrderCosts" xml:space="preserve">
    <value>Order costs</value>
  </data>
  <data name="Order.Order.Field.OrderDate" xml:space="preserve">
    <value>Order date</value>
  </data>
  <data name="Order.Order.Field.ShippingCosts" xml:space="preserve">
    <value>Shipping costs</value>
  </data>
  <data name="Order.Order.Field.Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="Order.Orderline.Field.Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Order.Orderline.Field.Closed" xml:space="preserve">
    <value>Delivered</value>
  </data>
  <data name="Order.Orderline.Field.ClosedDate" xml:space="preserve">
    <value>Deliverydate</value>
  </data>
  <data name="Order.Orderline.Field.Number" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Order.Orderline.Field.Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Order.Orderline.Field.Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Order.Order.Group.Orderinformation" xml:space="preserve">
    <value>Order information</value>
  </data>
  <data name="Order.Order.Group.Orderline" xml:space="preserve">
    <value>Order line</value>
  </data>
  <data name="toolbarButton.Action.New" xml:space="preserve">
    <value>Add line</value>
  </data>
  <data name="toolbarButton.Action.Delete" xml:space="preserve">
    <value>Delete selected row</value>
  </data>
  <data name="toolbarButton.Action.Save" xml:space="preserve">
    <value>Save current content</value>
  </data>
  <data name="metadataCurrency.Field.CurrencyName" xml:space="preserve">
    <value>Currency description</value>
  </data>
  <data name="metadataCurrency.Field.CurrencyCode" xml:space="preserve">
    <value>Currency code</value>
  </data>
  <data name="metadataCurrency.Field.CurrencySymbol" xml:space="preserve">
    <value>Currency Symbol</value>
  </data>
  <data name="metadataCurrency.Field.CurrencyRate" xml:space="preserve">
    <value>Exchange rate</value>
  </data>
  <data name="metadataCurrency.Field.Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="metadataCurrency.Field.CurrencyRateShort" xml:space="preserve">
    <value>Currency rate</value>
  </data>
  <data name="metadataCurrency.Toolbar.Button.Tooltip.Add" xml:space="preserve">
    <value>Add currency</value>
  </data>
  <data name="metadataCurrency.Toolbar.Button.Tooltip.Delete" xml:space="preserve">
    <value>Delete selected currency</value>
  </data>
  <data name="metadataCurrency.Toolbar.Button.Tooltip.Save" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="Order.Order.Group.Orderlist" xml:space="preserve">
    <value>Order details</value>
  </data>
  <data name="Order.Orderlist.Field.Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Order.Orderlist.Field.Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Order.Orderline.Field.Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Order.Orderline.Field.Price.Tooltip" xml:space="preserve">
    <value>Unit price in supplier's currency</value>
  </data>
  <data name="Order.Orderline.Field.Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Order.OrderlineTotals.GrandTotal" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Order.OrderlineTotals.Ordercosts" xml:space="preserve">
    <value>Order costs</value>
  </data>
  <data name="Order.OrderlineTotals.RowTotal" xml:space="preserve">
    <value>Total order lines</value>
  </data>
  <data name="Order.OrderlineTotals.ShippingCosts" xml:space="preserve">
    <value>Shipping costs</value>
  </data>
  <data name="Order.OrderlineTotals" xml:space="preserve">
    <value>Totals</value>
  </data>
  <data name="Order.Orderlist.Toolbar.Button.Delete" xml:space="preserve">
    <value>Delete selected order line</value>
  </data>
  <data name="Order.Orderlist.Toolbar.Button.New" xml:space="preserve">
    <value>Add new order line</value>
  </data>
  <data name="Order.Orderlist.Toolbar.Button.Save" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="Order.Toolbar.Button.Save" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="Order.Toolbar.Button.New" xml:space="preserve">
    <value>Add Order</value>
  </data>
  <data name="Order.Toolbar.Button.Delete" xml:space="preserve">
    <value>Delete Selected Oder</value>
  </data>
  <data name="Order.Datagrid.Header.Id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Order.Datagrid.Header.OrderCompleted" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Order.Datagrid.Header.OrderDate" xml:space="preserve">
    <value>Orderdate</value>
  </data>
  <data name="Order.Datagrid.Header.SupplierId" xml:space="preserve">
    <value>SupplierID</value>
  </data>
  <data name="Order.Datagrid.Header.SupplierName" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="Order.Order.Field.OrderNumber" xml:space="preserve">
    <value>Order number</value>
  </data>
  <data name="Order.Datagrid.Header.OrderNumber" xml:space="preserve">
    <value>Ordernumber</value>
  </data>
  <data name="Order.TabItemHeader.Orderrows" xml:space="preserve">
    <value>Order details</value>
  </data>
  <data name="Receipt.Page.Title" xml:space="preserve">
    <value>Receipts</value>
  </data>
  <data name="Receipt.Page.SubTitle" xml:space="preserve">
    <value>Registration of deliveries per order line</value>
  </data>
  <data name="Receipt.TabItemHeader.Memo" xml:space="preserve">
    <value>Additional information</value>
  </data>
  <data name="Receipt.TabItemHeader.General" xml:space="preserve">
    <value>Order/Receipt</value>
  </data>
  <data name="Receipt.Button.Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Receipt.Button.Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Receipt.Button.Tooltip.Apply" xml:space="preserve">
    <value>Process the entered receipts</value>
  </data>
  <data name="Receipt.Group.Receiptline" xml:space="preserve">
    <value>Delivery</value>
  </data>
  <data name="Receipt.Group.Receipts" xml:space="preserve">
    <value>Open deliveries</value>
  </data>
  <data name="Receipt.Group.Receiptline.Field.Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="general.Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Receipt.Group.Receiptline.Field.Amount" xml:space="preserve">
    <value>Received</value>
  </data>
  <data name="Receipt.Group.Receiptline.Field.Date" xml:space="preserve">
    <value>Deliverydate</value>
  </data>
  <data name="Receipt.Group.Receiptline.Field.Location" xml:space="preserve">
    <value>Storagelocation</value>
  </data>
  <data name="Receipt.ConfirmCancel.Title" xml:space="preserve">
    <value>Cancel order line</value>
  </data>
  <data name="Receipt.Button.Tooltip.Cancel" xml:space="preserve">
    <value>Let the open order line expire, will no longer be delivered.</value>
  </data>
  <data name="Receipt.ConfirmCancel.Message" xml:space="preserve">
    <value>Cancel the rest of this orderline? Booked receipts on this orderline remain</value>
  </data>
  <data name="storageStock.Datagrid.Header.Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="storageStock.Datagrid.Header.ProductId" xml:space="preserve">
    <value>ProductId</value>
  </data>
  <data name="storageStock.Datagrid.Header.StorageId" xml:space="preserve">
    <value>StorageId</value>
  </data>
  <data name="storageStock.Datagrid.Header.UnitId" xml:space="preserve">
    <value>UnitId</value>
  </data>
  <data name="storageStock.Datagrid.Header.UnitName" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="storageStock.Datagrid.Header.StorageName" xml:space="preserve">
    <value>Storagelocation</value>
  </data>
  <data name="storageStock.Datagrid.Header.ProductName" xml:space="preserve">
    <value>Product name</value>
  </data>
  <data name="storageStock.Datagrid.Header.Amount" xml:space="preserve">
    <value>In stock</value>
  </data>
  <data name="storageStock.Page.Title" xml:space="preserve">
    <value>Inventory management</value>
  </data>
  <data name="storageStock.Page.SubTitle" xml:space="preserve">
    <value>Enter the correct stock per item</value>
  </data>
  <data name="Status.Read" xml:space="preserve">
    <value>read</value>
  </data>
  <data name="Status.Stock.Amount" xml:space="preserve">
    <value>Stock amount for</value>
  </data>
  <data name="Status.Stock.Changed" xml:space="preserve">
    <value>changed</value>
  </data>
  <data name="Status.Stock.Product" xml:space="preserve">
    <value>product</value>
  </data>
  <data name="Status.Stock.Products" xml:space="preserve">
    <value>s</value>
  </data>
</root>